import React, { useState } from 'react';
import { toastHandler } from '../../../utils/utils';
import { ToastType } from '../../../constants/constants';
import { useConfigContext } from '../../../contexts/ConfigContextProvider';
import styles from './ConfigManager.module.css';

const ConfigManager = () => {
  const { 
    storeConfig,
    exportConfiguration, 
    importConfiguration, 
    resetConfiguration 
  } = useConfigContext();
  
  const [isExporting, setIsExporting] = useState(false);
  const [isImporting, setIsImporting] = useState(false);

  const handleExport = async () => {
    setIsExporting(true);
    
    try {
      await new Promise(resolve => setTimeout(resolve, 1000));
      exportConfiguration();
    } catch (error) {
      toastHandler(ToastType.Error, 'Error al exportar la configuraci√≥n');
    } finally {
      setIsExporting(false);
    }
  };

  const handleImport = async (event) => {
    const file = event.target.files[0];
    if (!file) return;

    setIsImporting(true);

    try {
      await importConfiguration(file);
    } catch (error) {
      toastHandler(ToastType.Error, 'Error al importar la configuraci√≥n');
    } finally {
      setIsImporting(false);
      event.target.value = '';
    }
  };

  const handleReset = async () => {
    if (!window.confirm('¬øEst√°s seguro de restablecer toda la configuraci√≥n a los valores por defecto? Esta acci√≥n no se puede deshacer.')) {
      return;
    }

    try {
      await new Promise(resolve => setTimeout(resolve, 1000));
      resetConfiguration();
    } catch (error) {
      toastHandler(ToastType.Error, 'Error al restablecer la configuraci√≥n');
    }
  };

  return (
    <div className={styles.configManager}>
      <h2>Gesti√≥n de Configuraci√≥n Completa</h2>
      
      <div className={styles.configStats}>
        <div className={styles.statCard}>
          <h4>üìä Estado Actual</h4>
          <div className={styles.statGrid}>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>{storeConfig.products?.length || 0}</span>
              <span className={styles.statLabel}>Productos</span>
            </div>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>{storeConfig.categories?.length || 0}</span>
              <span className={styles.statLabel}>Categor√≠as</span>
            </div>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>{storeConfig.coupons?.length || 0}</span>
              <span className={styles.statLabel}>Cupones</span>
            </div>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>{storeConfig.zones?.length || 0}</span>
              <span className={styles.statLabel}>Zonas</span>
            </div>
          </div>
          <p className={styles.lastModified}>
            √öltima modificaci√≥n: {new Date(storeConfig.lastModified).toLocaleString('es-CU')}
          </p>
        </div>
      </div>
      
      <div className={styles.configSection}>
        <div className={styles.configCard}>
          <div className={styles.cardHeader}>
            <h3>üì§ Exportar Configuraci√≥n Completa</h3>
          </div>
          <div className={styles.cardContent}>
            <p>
              Exporta TODA la configuraci√≥n de la tienda incluyendo:
            </p>
            <ul className={styles.featureList}>
              <li>‚úÖ Todos los productos con sus detalles</li>
              <li>‚úÖ Todas las categor√≠as</li>
              <li>‚úÖ Todos los cupones de descuento</li>
              <li>‚úÖ Todas las zonas de entrega</li>
              <li>‚úÖ Configuraci√≥n general de la tienda</li>
              <li>‚úÖ Informaci√≥n de WhatsApp y contacto</li>
            </ul>
            <button 
              onClick={handleExport}
              disabled={isExporting}
              className={`btn btn-primary ${styles.actionButton}`}
            >
              {isExporting ? (
                <span className={styles.loading}>
                  <span className="loader-2"></span>
                  Exportando...
                </span>
              ) : (
                'üì§ Exportar Configuraci√≥n Completa'
              )}
            </button>
          </div>
        </div>

        <div className={styles.configCard}>
          <div className={styles.cardHeader}>
            <h3>üì• Importar Configuraci√≥n Completa</h3>
          </div>
          <div className={styles.cardContent}>
            <p>
              Importa una configuraci√≥n completa previamente exportada. 
              <strong> Esto sobrescribir√° TODA la configuraci√≥n actual.</strong>
            </p>
            <div className={styles.importContainer}>
              <input
                type="file"
                accept=".json"
                onChange={handleImport}
                disabled={isImporting}
                className={styles.fileInput}
                id="config-import"
              />
              <label 
                htmlFor="config-import" 
                className={`btn btn-success ${styles.actionButton} ${isImporting ? styles.disabled : ''}`}
              >
                {isImporting ? (
                  <span className={styles.loading}>
                    <span className="loader-2"></span>
                    Importando...
                  </span>
                ) : (
                  'üì• Seleccionar Archivo JSON'
                )}
              </label>
            </div>
          </div>
        </div>

        <div className={styles.configCard}>
          <div className={styles.cardHeader}>
            <h3>üîÑ Restablecer Configuraci√≥n</h3>
          </div>
          <div className={styles.cardContent}>
            <p>
              Restablece TODA la configuraci√≥n de la tienda a los valores por defecto del archivo JSON original. 
              <strong> Esta acci√≥n eliminar√° todos los cambios realizados.</strong>
            </p>
            <button 
              onClick={handleReset}
              className={`btn btn-danger ${styles.actionButton}`}
            >
              üîÑ Restablecer a Configuraci√≥n Original
            </button>
          </div>
        </div>
      </div>

      <div className={styles.infoSection}>
        <h3>‚ÑπÔ∏è Informaci√≥n del Sistema</h3>
        <div className={styles.infoList}>
          <div className={styles.infoItem}>
            <strong>üéØ Funcionamiento:</strong> La tienda se rige completamente por el archivo JSON exportado
          </div>
          <div className={styles.infoItem}>
            <strong>üíæ Guardado:</strong> Todos los cambios se guardan en el c√≥digo fuente y se exportan en JSON
          </div>
          <div className={styles.infoItem}>
            <strong>üìÅ Formato:</strong> JSON (.json) con estructura completa de la tienda
          </div>
          <div className={styles.infoItem}>
            <strong>üîÑ Sincronizaci√≥n:</strong> Cambios en el panel se reflejan autom√°ticamente en el JSON
          </div>
          <div className={styles.infoItem}>
            <strong>üõ°Ô∏è Seguridad:</strong> Realiza copias de seguridad antes de importar configuraciones
          </div>
          <div className={styles.infoItem}>
            <strong>‚ö° Rendimiento:</strong> Configuraci√≥n optimizada para carga r√°pida
          </div>
        </div>
      </div>
    </div>
  );
};

export default ConfigManager;